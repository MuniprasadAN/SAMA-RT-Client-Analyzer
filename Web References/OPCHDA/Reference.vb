'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace OPCHDA
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_IOPCHDAServc", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class OPCHDAWcfService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ReadRawValuesFromTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadRawValuesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadRawValuesIncludeBoundsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOPCTagsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisconnectOPCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOPCStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SAMAAnalyzer.My.MySettings.Default.SAMARTClient_OPCHDA_OPCHDAWcfService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ReadRawValuesFromTimeCompleted As ReadRawValuesFromTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadRawValuesCompleted As ReadRawValuesCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadRawValuesIncludeBoundsCompleted As ReadRawValuesIncludeBoundsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataCompleted As GetDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOPCTagsCompleted As GetOPCTagsCompletedEventHandler
        
        '''<remarks/>
        Public Event DisconnectOPCCompleted As DisconnectOPCCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOPCStatusCompleted As GetOPCStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/ReadRawValuesFromTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadRawValuesFromTime(<System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal TagName() As String, ByVal StartTime As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal StartTimeSpecified As Boolean, ByVal MaxRows As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal MaxRowsSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ReadRawValuesFromTime", New Object() {TagName, StartTime, StartTimeSpecified, MaxRows, MaxRowsSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesFromTimeAsync(ByVal TagName() As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean)
            Me.ReadRawValuesFromTimeAsync(TagName, StartTime, StartTimeSpecified, MaxRows, MaxRowsSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesFromTimeAsync(ByVal TagName() As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean, ByVal userState As Object)
            If (Me.ReadRawValuesFromTimeOperationCompleted Is Nothing) Then
                Me.ReadRawValuesFromTimeOperationCompleted = AddressOf Me.OnReadRawValuesFromTimeOperationCompleted
            End If
            Me.InvokeAsync("ReadRawValuesFromTime", New Object() {TagName, StartTime, StartTimeSpecified, MaxRows, MaxRowsSpecified}, Me.ReadRawValuesFromTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadRawValuesFromTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadRawValuesFromTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadRawValuesFromTimeCompleted(Me, New ReadRawValuesFromTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/ReadRawValues", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadRawValues(<System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal TagName() As String, ByVal StartTime As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal MaxRowsSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ReadRawValues", New Object() {TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesAsync(ByVal TagName() As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean)
            Me.ReadRawValuesAsync(TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesAsync(ByVal TagName() As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean, ByVal userState As Object)
            If (Me.ReadRawValuesOperationCompleted Is Nothing) Then
                Me.ReadRawValuesOperationCompleted = AddressOf Me.OnReadRawValuesOperationCompleted
            End If
            Me.InvokeAsync("ReadRawValues", New Object() {TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified}, Me.ReadRawValuesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadRawValuesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadRawValuesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadRawValuesCompleted(Me, New ReadRawValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/ReadRawValuesIncludeBounds", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadRawValuesIncludeBounds(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal TagName As String, ByVal StartTime As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal MaxRowsSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ReadRawValuesIncludeBounds", New Object() {TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesIncludeBoundsAsync(ByVal TagName As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean)
            Me.ReadRawValuesIncludeBoundsAsync(TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadRawValuesIncludeBoundsAsync(ByVal TagName As String, ByVal StartTime As Date, ByVal StartTimeSpecified As Boolean, ByVal EndTime As Date, ByVal EndTimeSpecified As Boolean, ByVal MaxRows As Integer, ByVal MaxRowsSpecified As Boolean, ByVal userState As Object)
            If (Me.ReadRawValuesIncludeBoundsOperationCompleted Is Nothing) Then
                Me.ReadRawValuesIncludeBoundsOperationCompleted = AddressOf Me.OnReadRawValuesIncludeBoundsOperationCompleted
            End If
            Me.InvokeAsync("ReadRawValuesIncludeBounds", New Object() {TagName, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, MaxRows, MaxRowsSpecified}, Me.ReadRawValuesIncludeBoundsOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadRawValuesIncludeBoundsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadRawValuesIncludeBoundsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadRawValuesIncludeBoundsCompleted(Me, New ReadRawValuesIncludeBoundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/GetData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetData(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal value As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("GetData", New Object() {value})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataAsync(ByVal value As String)
            Me.GetDataAsync(value, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataAsync(ByVal value As String, ByVal userState As Object)
            If (Me.GetDataOperationCompleted Is Nothing) Then
                Me.GetDataOperationCompleted = AddressOf Me.OnGetDataOperationCompleted
            End If
            Me.InvokeAsync("GetData", New Object() {value}, Me.GetDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataCompleted(Me, New GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/GetOPCTags", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOPCTags() As <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/OPCHDAWCFService")> Tgs()
            Dim results() As Object = Me.Invoke("GetOPCTags", New Object(-1) {})
            Return CType(results(0),Tgs())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOPCTagsAsync()
            Me.GetOPCTagsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOPCTagsAsync(ByVal userState As Object)
            If (Me.GetOPCTagsOperationCompleted Is Nothing) Then
                Me.GetOPCTagsOperationCompleted = AddressOf Me.OnGetOPCTagsOperationCompleted
            End If
            Me.InvokeAsync("GetOPCTags", New Object(-1) {}, Me.GetOPCTagsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOPCTagsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOPCTagsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOPCTagsCompleted(Me, New GetOPCTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/DisconnectOPC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DisconnectOPC()
            Me.Invoke("DisconnectOPC", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisconnectOPCAsync()
            Me.DisconnectOPCAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisconnectOPCAsync(ByVal userState As Object)
            If (Me.DisconnectOPCOperationCompleted Is Nothing) Then
                Me.DisconnectOPCOperationCompleted = AddressOf Me.OnDisconnectOPCOperationCompleted
            End If
            Me.InvokeAsync("DisconnectOPC", New Object(-1) {}, Me.DisconnectOPCOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisconnectOPCOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisconnectOPCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisconnectOPCCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOPCHDAServc/GetOPCStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetOPCStatus(ByRef GetOPCStatusResult As Boolean, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef GetOPCStatusResultSpecified As Boolean)
            Dim results() As Object = Me.Invoke("GetOPCStatus", New Object(-1) {})
            GetOPCStatusResult = CType(results(0),Boolean)
            GetOPCStatusResultSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOPCStatusAsync()
            Me.GetOPCStatusAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOPCStatusAsync(ByVal userState As Object)
            If (Me.GetOPCStatusOperationCompleted Is Nothing) Then
                Me.GetOPCStatusOperationCompleted = AddressOf Me.OnGetOPCStatusOperationCompleted
            End If
            Me.InvokeAsync("GetOPCStatus", New Object(-1) {}, Me.GetOPCStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOPCStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOPCStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOPCStatusCompleted(Me, New GetOPCStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/OPCHDAWCFService")>  _
    Partial Public Class Tgs
        
        Private tgNameField As String
        
        Private fullpathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TgName() As String
            Get
                Return Me.tgNameField
            End Get
            Set
                Me.tgNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property fullpath() As String
            Get
                Return Me.fullpathField
            End Get
            Set
                Me.fullpathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ReadRawValuesFromTimeCompletedEventHandler(ByVal sender As Object, ByVal e As ReadRawValuesFromTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadRawValuesFromTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ReadRawValuesCompletedEventHandler(ByVal sender As Object, ByVal e As ReadRawValuesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadRawValuesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ReadRawValuesIncludeBoundsCompletedEventHandler(ByVal sender As Object, ByVal e As ReadRawValuesIncludeBoundsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadRawValuesIncludeBoundsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOPCTagsCompletedEventHandler(ByVal sender As Object, ByVal e As GetOPCTagsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOPCTagsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Tgs()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Tgs())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DisconnectOPCCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOPCStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetOPCStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOPCStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property GetOPCStatusResult() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property GetOPCStatusResultSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
End Namespace
